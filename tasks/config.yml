---
# After sabnzbd installation...
- name: make temporary directory
  command: >
    mktemp -d --tmpdir={{ sabnzbd_tmpdir_dirname }} ansible-sabnzbd-XXXXXXXXXX
  register: sabnzbd_mktemp
  tags:
    - sabnzbd
    - config

- set_fact:
    sabnzbd_tmpdir: "{{ sabnzbd_mktemp.stdout }}"
  tags:
    - sabnzbd
    - config

- set_fact:
    sabnzbd_pidfile: "{{ sabnzbd_tmpdir }}/sabnzbd.pid"
    sabnzbd_config_tmp: "{{ sabnzbd_tmpdir }}/sabnzbd.ini"
  tags:
    - sabnzbd
    - config

- name: generate sabnzbd.ini
  command: >
    sabnzbd
      -f sabnzbd.ini
      -d
      --pidfile {{ sabnzbd_pidfile }}
  register: sabnzbd_daemon
  args:
    chdir: "{{ sabnzbd_tmpdir }}"
  tags:
    - sabnzbd
    - config

- name: wait for sabnzbd pidfile to exist
  wait_for:
    path: "{{ sabnzbd_pidfile }}"
    timeout: "{{ sabnzbd_pidfile_timeout | default(omit) }}"
  tags:
    - sabnzbd
    - config

- name: get encoded sabnzbd pid
  slurp:
    src: "{{ sabnzbd_pidfile }}"
  register: sabnzbd_pidfile_encoded
  tags:
    - sabnzbd
    - config

- set_fact:
    sabnzbd_pid: >
      {{ sabnzbd_pidfile_encoded.content
         | b64decode
         | regex_replace('[\n\r]*$', '')
      }}
  tags:
    - sabnzbd
    - config

- name: kill sabnzbd daemon
  command: "kill -s SIGHUP {{ sabnzbd_pid }}"
  ignore_errors: yes
  tags:
    - sabnzbd
    - config

- name: build list of items in sabnzbd config
  set_fact:
    sabnzbd_config_items: >
      {%- set _sabnzbd_config_items = [] -%}
      {%- for section, options in sabnzbd_config_settings.iteritems() -%}
        {%- for option, value in options.iteritems() -%}
          {%- set _null = _sabnzbd_config_items.append({
            'section': section,
            'option': option,
            'value': value
          }) -%}
        {%- endfor -%}
      {%- endfor -%}
      {{ _sabnzbd_config_items }}
  tags:
    - sabnzbd
  tags:
    - sabnzbd
    - config

- name: insert dummy section to prevent parser error on top-level key(s)
  become: yes
  lineinfile:
    dest: "{{ sabnzbd_config_src }}"
    line: '[ ]'
    insertbefore: BOF
    state: present
  tags:
    - sabnzbd
    - config

- name: alter sabnzbd config file
  become: yes
  ini_file:
    backup: "{{ sabnzbd_config_backup | default(omit) }}"
    dest: "{{ sabnzbd_config_src }}"
    follow: "{{ sabnzbd_config_follow | default(omit) }}"
    group: "{{ sabnzbd_config_group | default(omit) }}"
    mode: "{{ sabnzbd_config_mode | default(omit) }}"
    owner: "{{ sabnzbd_config_owner | default(omit) }}"
    selevel: "{{ sabnzbd_config_selevel | default(omit) }}"
    serole: "{{ sabnzbd_config_serole | default(omit) }}"
    setype: "{{ sabnzbd_config_setype | default(omit) }}"
    option: "{{ item.option | default(omit) }}"
    value: "{{ item.value | default(omit) }}"
    section: "{{ item.section | default(omit) }}"
  with_items: "{{ sabnzbd_config_items }}"
  tags:
    - sabnzbd
    - config

- name: remove dummy section
  become: yes
  lineinfile:
    dest: "{{ sabnzbd_config_src }}"
    regexp: '^\s*\[ \]\s*$'
    state: absent
  tags:
    - sabnzbd
    - config

